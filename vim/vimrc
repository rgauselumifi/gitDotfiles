filetype plugin on
runtime macros/matchit.vim
packadd! editorconfig

"options
set path=.,,,src/**,packages/**,apps/**
set wildignore+=*/node_modules/*,*/dist/*
set wildignorecase
set wildmenu
set nonu
set showcmd
set cmdheight=1
set splitright
set splitbelow
set belloff=all
set wildchar=<C-n>
set termguicolors
set nobackup
set nowritebackup
set updatetime=300
set encoding=utf-8
set undodir=~/.vim/undo
set undofile
set noswapfile
set autoindent
set smartindent
set tabstop=2
set softtabstop=2
set signcolumn=no
set shiftwidth=2
set expandtab
set incsearch
set hlsearch
set ignorecase
set smartcase
set nowrap
set hidden
set laststatus=0
set grepprg=rg\ --vimgrep\ --smart-case
set grepformat^=%f:%l:%c:%m
set autoread
set timeoutlen=1000
set ttimeoutlen=100
set backspace=indent,eol,start
augroup Wrap
    autocmd!
    autocmd FileType qf,markdown setlocal wrap
augroup END


let mapleader = " "

"plugins
call plug#begin()
Plug 'neoclide/coc.nvim', {'branch': 'release'}
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-surround'
Plug 'ojroques/vim-oscyank', {'branch': 'main'}
Plug 'ericbn/vim-solarized'
call plug#end()

"Coc
let g:coc_global_extensions = ['coc-html', 'coc-json', 'coc-tsserver']
inoremap <silent><expr> <C-n>
      \ coc#pum#visible() ? coc#pum#next(1) :
      \ coc#refresh()

nnoremap <silent> K :call ShowDocumentation()<CR>
function! ShowDocumentation()
  if CocAction('hasProvider', 'hover')
    call CocActionAsync('definitionHover')
  else
    call feedkeys('K', 'in')
  endif
endfunction
nmap ,n <Plug>(coc-rename)
augroup mygroup
  autocmd!
  autocmd User CocJumpPlaceholder call CocActionAsync('showSignatureHelp')
augroup end
 nmap ,a  <Plug>(coc-codeaction-cursor)
 nmap ,A  <Plug>(coc-codeaction-source)
 nmap <leader>d :CocDiagnostics<cr>
 nnoremap <silent><nowait><expr> <C-d> coc#float#has_scroll() ? coc#float#scroll(1) : "\<C-f>"
 nnoremap <silent><nowait><expr> <C-u> coc#float#has_scroll() ? coc#float#scroll(0) : "\<C-b>"

 "maps
 nnoremap <leader>N :vnew \| setlocal nobuflisted buftype=nofile bufhidden=wipe noswapfile<cr>
 nnoremap <c-d> <c-d>zz
 nnoremap <c-u> <c-u>zz
 nnoremap <c-k> :cp<CR>
 nnoremap <c-j> :cn<CR>
 nnoremap [a :prev<cr>
 nnoremap ]a :n<cr>
 nnoremap <c-p> :lprevious<CR>
 nnoremap <c-n> :lnext<CR>
 nnoremap ,f mmgggqG`m

 vnoremap J :m '>+1<cr>gv=gv
 vnoremap K :m '<-2<cr>gv=gv

 inoremap {<cr> {<cr>}<esc>O
 inoremap [<cr> [<cr>]<esc>O
 inoremap (<cr> (<cr>)<esc>O
 inoremap {, {<cr>},<esc>O
 inoremap [, [<cr>],<esc>O
 inoremap (, (<cr>),<esc>O
 inoremap {; {<cr>};<esc>O
 inoremap [; [<cr>];<esc>O
 inoremap (; (<cr>);<esc>O

 nmap <leader>Y <Plug>OSCYankOperator
 nmap <leader>yy <leader>Y_
 vmap <leader>y <Plug>OSCYankVisual

"colors
 set tagfunc=CocTagFunc
 set background=dark
 silent! colorscheme solarized
